apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-restaurant-init-scripts
  namespace: uberx-restaurant
data:
  init-db.sql: |
    SET SQL_MODE = "STRICT_ALL_TABLES";

    CREATE DATABASE IF NOT EXISTS restaurant_db;
    USE restaurant_db;

    -- Create WorkDay table
    CREATE TABLE IF NOT EXISTS `WorkDay` (
      `id` INT AUTO_INCREMENT PRIMARY KEY,
      `day` VARCHAR(20) NOT NULL
    ) ENGINE=InnoDB;

    -- Create WorkHours table
    CREATE TABLE IF NOT EXISTS `WorkHours` (
      `id` INT AUTO_INCREMENT PRIMARY KEY,
      `startTime` TIME NOT NULL,
      `endTime` TIME NOT NULL
    ) ENGINE=InnoDB;

    -- Create Restaurant table
    CREATE TABLE IF NOT EXISTS `Restaurant` (
      `id` INT AUTO_INCREMENT PRIMARY KEY,
      `ownerId` INT NOT NULL,
      `name` VARCHAR(255) NOT NULL,
      `address` TEXT NOT NULL,
      `images` TEXT,
      `isAvailable` BOOLEAN DEFAULT TRUE,
      `status` VARCHAR(50),
      `cuisineType` VARCHAR(100),
      `phone` VARCHAR(20),
      `email` VARCHAR(100),
      `description` TEXT,
      `imageUrl` VARCHAR(255),
      `rating` DECIMAL(3, 1),
      `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    ) ENGINE=InnoDB;

    -- Create FoodItem table
    CREATE TABLE IF NOT EXISTS `FoodItem` (
      `id` INT AUTO_INCREMENT PRIMARY KEY,
      `restaurantId` INT NOT NULL,
      `name` VARCHAR(255) NOT NULL,
      `description` TEXT,
      `price` DECIMAL(10, 2) NOT NULL,
      `prepareTime` INT NOT NULL DEFAULT 15,
      `isPromotion` BOOLEAN DEFAULT FALSE,
      `imageUrl` VARCHAR(255),
      `category` VARCHAR(100),
      `isAvailable` BOOLEAN DEFAULT TRUE,
      `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      FOREIGN KEY (`restaurantId`) REFERENCES `Restaurant`(`id`)
    ) ENGINE=InnoDB;

    -- Create RestaurantOrder table
    CREATE TABLE IF NOT EXISTS `RestaurantOrder` (
      `id` INT AUTO_INCREMENT PRIMARY KEY,
      `orderId` INT NOT NULL,
      `customerId` INT NOT NULL,
      `restaurantId` INT NOT NULL,
      `items` JSON NOT NULL,
      `deliveryFee` DECIMAL(10, 2),
      `status` VARCHAR(50) NOT NULL,
      `createdAt` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (`restaurantId`) REFERENCES `Restaurant`(`id`)
    ) ENGINE=InnoDB;

    -- Create RestaurantSchedule table
    CREATE TABLE IF NOT EXISTS `RestaurantSchedule` (
      `id` INT AUTO_INCREMENT PRIMARY KEY,
      `restaurantId` INT NOT NULL,
      `workDayId` INT NOT NULL,
      `workHoursId` INT NOT NULL,
      `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      FOREIGN KEY (`restaurantId`) REFERENCES `Restaurant`(`id`),
      FOREIGN KEY (`workDayId`) REFERENCES `WorkDay`(`id`),
      FOREIGN KEY (`workHoursId`) REFERENCES `WorkHours`(`id`)
    ) ENGINE=InnoDB;

    -- Sample data for WorkDay table
    INSERT INTO `WorkDay` (`day`) VALUES 
      ('Monday'), 
      ('Tuesday'), 
      ('Wednesday'), 
      ('Thursday'), 
      ('Friday'), 
      ('Saturday'), 
      ('Sunday');

    -- Sample data for WorkHours table
    INSERT INTO `WorkHours` (`startTime`, `endTime`) VALUES 
      ('09:00:00', '18:00:00'),
      ('18:00:00', '23:00:00'),
      ('09:00:00', '22:00:00'),
      ('10:00:00', '23:00:00'),
      ('11:00:00', '22:00:00'),
      ('11:00:00', '23:00:00'),
      ('11:00:00', '21:00:00'),
      ('12:00:00', '22:00:00'),
      ('12:00:00', '23:00:00');

    -- Restaurant data
    INSERT INTO `Restaurant` (`id`, `ownerId`, `name`, `cuisineType`, `address`, `phone`, `email`, `description`, `imageUrl`, `rating`, `isAvailable`, `status`, `created_at`, `updated_at`)
    VALUES 
      (1, 4, 'Tasty Bites', 'Italian', '123 Food St, Cuisine City', '9876543210', 'contact@tastybites.com', 'Authentic Italian cuisine with a modern twist', 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4', 4.7, TRUE, 'ACTIVE', NOW(), NOW()),
      (2, 4, 'Spice Garden', 'Indian', '456 Spice Ave, Flavor Town', '5432109876', 'hello@spicegarden.com', 'Traditional Indian dishes with rich flavors', 'https://images.unsplash.com/photo-1517244683847-7456b63c5969', 4.5, TRUE, 'ACTIVE', NOW(), NOW()),
      (3, 4, 'Burger Palace', 'American', '789 Burger Blvd, Meal City', '1122334455', 'orders@burgerpalace.com', 'Gourmet burgers and sides', 'https://images.unsplash.com/photo-1561758033-d89a9ad46330', 4.3, TRUE, 'ACTIVE', NOW(), NOW()),
      (4, 4, 'Sushi Heaven', 'Japanese', '321 Fish Ln, Ocean Town', '5566778899', 'info@sushiheaven.com', 'Fresh sushi and Japanese delicacies', 'https://images.unsplash.com/photo-1553621042-f6e147245754', 4.8, TRUE, 'ACTIVE', NOW(), NOW());

    -- Food items data
    INSERT INTO `FoodItem` (`restaurantId`, `name`, `description`, `price`, `imageUrl`, `category`, `isAvailable`, `created_at`, `updated_at`)
    VALUES
      -- Tasty Bites menu
      (1, 'Margherita Pizza', 'Classic pizza with tomato, mozzarella, and basil', 10.99, 'https://images.unsplash.com/photo-1604382354936-07c5d9983bd3', 'Pizza', true, NOW(), NOW()),
      (1, 'Fettuccine Alfredo', 'Creamy pasta with parmesan cheese', 12.99, 'https://images.unsplash.com/photo-1559592413-7cec4d0cae2b', 'Pasta', true, NOW(), NOW()),
      (1, 'Tiramisu', 'Classic Italian dessert with coffee and mascarpone', 6.99, 'https://images.unsplash.com/photo-1571877227200-a0d98ea607e9', 'Dessert', true, NOW(), NOW()),
      (1, 'Bruschetta', 'Toasted bread with tomatoes, garlic, and basil', 7.99, 'https://images.unsplash.com/photo-1572695157366-5e585ab2b69f', 'Appetizer', true, NOW(), NOW()),
      
      -- Spice Garden menu
      (2, 'Butter Chicken', 'Tender chicken in a rich buttery tomato sauce', 14.99, 'https://images.unsplash.com/photo-1588166524941-3bf61a9c41db', 'Main Course', true, NOW(), NOW()),
      (2, 'Vegetable Biryani', 'Fragrant rice dish with mixed vegetables and spices', 11.99, 'https://images.unsplash.com/photo-1589302168068-964664d93dc0', 'Rice', true, NOW(), NOW()),
      (2, 'Garlic Naan', 'Freshly baked flatbread with garlic', 2.99, 'https://images.unsplash.com/photo-1610057099431-d73a1c9d2f2f', 'Bread', true, NOW(), NOW()),
      (2, 'Gulab Jamun', 'Sweet milk solid balls soaked in rose syrup', 4.99, 'https://images.unsplash.com/photo-1589729132389-8f0e2033991b', 'Dessert', true, NOW(), NOW()),
      
      -- Burger Palace menu
      (3, 'Classic Cheeseburger', 'Beef patty with American cheese, lettuce, and tomato', 9.99, 'https://images.unsplash.com/photo-1568901346375-23c9450c58cd', 'Burger', true, NOW(), NOW()),
      (3, 'Loaded Fries', 'French fries topped with cheese, bacon, and green onions', 6.99, 'https://images.unsplash.com/photo-1585109649139-366815a0d713', 'Sides', true, NOW(), NOW()),
      (3, 'Chocolate Milkshake', 'Rich and creamy chocolate shake', 4.99, 'https://images.unsplash.com/photo-1572490122747-3968b75cc699', 'Beverage', true, NOW(), NOW()),
      (3, 'Onion Rings', 'Crispy battered onion rings', 4.99, 'https://images.unsplash.com/photo-1639024471283-03518883512d', 'Sides', true, NOW(), NOW()),
      
      -- Sushi Heaven menu
      (4, 'California Roll', 'Crab, avocado, and cucumber roll', 8.99, 'https://images.unsplash.com/photo-1579871494447-9811cf80d66c', 'Sushi Roll', true, NOW(), NOW()),
      (4, 'Salmon Nigiri', 'Fresh salmon over pressed rice', 9.99, 'https://images.unsplash.com/photo-1534482421-64566f976cfa', 'Nigiri', true, NOW(), NOW()),
      (4, 'Miso Soup', 'Traditional Japanese soup with tofu and seaweed', 3.99, 'https://images.unsplash.com/photo-1607301406259-dfb186e15de8', 'Soup', true, NOW(), NOW()),
      (4, 'Green Tea Ice Cream', 'Creamy matcha flavored ice cream', 4.99, 'https://images.unsplash.com/photo-1561845730-208ad5910553', 'Dessert', true, NOW(), NOW());

    -- Restaurant schedule data
    INSERT INTO `RestaurantSchedule` (`restaurantId`, `workDayId`, `workHoursId`, `created_at`, `updated_at`)
    VALUES
      -- Tasty Bites schedule (Mon-Sat)
      (1, 1, 3, NOW(), NOW()),  -- Monday, 9-22
      (1, 2, 3, NOW(), NOW()),  -- Tuesday, 9-22
      (1, 3, 3, NOW(), NOW()),  -- Wednesday, 9-22
      (1, 4, 3, NOW(), NOW()),  -- Thursday, 9-22
      (1, 5, 5, NOW(), NOW()),  -- Friday, 9-23
      (1, 6, 4, NOW(), NOW()),  -- Saturday, 10-23
      
      -- Spice Garden schedule (all days)
      (2, 1, 5, NOW(), NOW()),  -- Monday, 11-22
      (2, 2, 5, NOW(), NOW()),  -- Tuesday, 11-22
      (2, 3, 5, NOW(), NOW()),  -- Wednesday, 11-22
      (2, 4, 5, NOW(), NOW()),  -- Thursday, 11-22
      (2, 5, 6, NOW(), NOW()),  -- Friday, 11-23
      (2, 6, 6, NOW(), NOW()),  -- Saturday, 11-23
      (2, 7, 7, NOW(), NOW()),  -- Sunday, 11-21
      
      -- Burger Palace schedule (all days)
      (3, 1, 4, NOW(), NOW()),  -- Monday, 10-23
      (3, 2, 4, NOW(), NOW()),  -- Tuesday, 10-23
      (3, 3, 4, NOW(), NOW()),  -- Wednesday, 10-23
      (3, 4, 4, NOW(), NOW()),  -- Thursday, 10-23
      (3, 5, 4, NOW(), NOW()),  -- Friday, 10-23
      (3, 6, 4, NOW(), NOW()),  -- Saturday, 10-23
      (3, 7, 4, NOW(), NOW()),  -- Sunday, 10-23
      
      -- Sushi Heaven schedule (Tue-Sat)
      (4, 2, 8, NOW(), NOW()),  -- Tuesday, 12-22
      (4, 3, 8, NOW(), NOW()),  -- Wednesday, 12-22
      (4, 4, 8, NOW(), NOW()),  -- Thursday, 12-22
      (4, 5, 9, NOW(), NOW()),  -- Friday, 12-23
      (4, 6, 9, NOW(), NOW());  -- Saturday, 12-23
